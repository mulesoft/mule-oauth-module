<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:oauth="http://www.mulesoft.org/schema/mule/oauth"
      xmlns:java="http://www.mulesoft.org/schema/mule/java"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
       http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
       http://www.mulesoft.org/schema/mule/oauth http://www.mulesoft.org/schema/mule/oauth/current/mule-oauth.xsd
       http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

    <munit:config name="client-credential-through-inline-config-refresh" minMuleVersion="4.2.2"/>

    <oauth:token-manager-config name="tokenManagerConfig2"/>

    <http:request-config name="requestConfigWithRefreshToken">
        <http:request-connection host="localhost" port="${oauth.server.port}">
            <http:authentication>
                <oauth:client-credentials-grant-type
                        clientId="ndli93xdws2qoe6ms1d389vl6bxquv3e"
                        clientSecret="yL692Az1cNhfk1VhTzyx4jOjjMKBrO9T"
                        tokenManager="tokenManagerConfig2"
                        scopes="$expected scope"
                        tokenUrl="#['http://localhost:' ++ ${oauth.server.port} ++ '/token']"
                        refreshTokenWhen="#[payload['success'] == 'false' and (payload['errors'][0].code == '601' or payload['errors'][0].code == '602')]"
                        responseAccessToken="#[payload['access_token']]"
                        responseExpiresIn="#[payload['expires_in']]">
                </oauth:client-credentials-grant-type>
            </http:authentication>
        </http:request-connection>
    </http:request-config>

    <munit:test name="client credentials with refreshTokenWhen expression that uses payload" description="Validates client credential and checks whether to refresh the token using an expression that reads the payload">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="oauth-token"/>
            <munit:enable-flow-source value="oauth-resource-json"/>
        </munit:enable-flow-sources>
        <munit:execution>
            <set-payload value="{&quot;success&quot;:&quot;true&quot;, &quot;errors&quot;:[{&quot;code&quot;:&quot;601&quot;}]}" mimeType="application/json"/>
            <http:request path="/echo-json" method="POST" config-ref="requestConfigWithRefreshToken">
            </http:request>
            <set-payload value="#[payload]" mimeType="application/json" />
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload.success]" is="#[MunitTools::equalTo('true')]"/>
        </munit:validation>
    </munit:test>

    <munit:test name="client credentials with refreshTokenWhen expression that uses payload and non repeatable streams set" description="Validates client credential and checks whether to refresh the token using an expression that reads the payload">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="oauth-token"/>
            <munit:enable-flow-source value="oauth-resource-json"/>
        </munit:enable-flow-sources>
        <munit:execution>
            <try>
                <set-payload value="{&quot;success&quot;:&quot;true&quot;, &quot;errors&quot;:[{&quot;code&quot;:&quot;601&quot;}]}" mimeType="application/json"/>
                <http:request path="/echo-json" method="POST" config-ref="requestConfigWithRefreshToken">
                    <non-repeatable-stream/>
                </http:request>
                <set-payload value="#[payload['success'] == 'false']" mimeType="application/json" />
                <error-handler>
                    <on-error-continue enableNotifications="true" logException="true" >
                        <set-variable value="#[error.description]" variableName="errorMessage"/>
                    </on-error-continue>
                </error-handler>
            </try>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[vars.errorMessage]" is="#[MunitTools::containsString('Unable to parse empty input')]"/>
        </munit:validation>
    </munit:test>
</mule>